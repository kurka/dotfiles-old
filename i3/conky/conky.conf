### Conky configuration file
## Output is printed to the console -> i3bar

## No output to X <yes/no>
out_to_x no

## Create own window to draw <yes/no>
own_window no

## Print everything to console?
out_to_console yes

## Use double buffering (reduces flicker, not needed for console output)
double_buffer no

## Set to yes if you want Conky to be forked in the background
background no

## Update interval in seconds
update_interval 2

## This is the number of times Conky will update before quitting.
## Set to zero to run forever.
total_run_times 0

## Shortens units to a single character (kiB->k, GiB->G, etc.). Default is off.
short_units true

## How strict should if_up be when testing an interface for being up?
## The value is one of up, link or address, to check for the interface
## being solely up, being up and having link or being up, having link
## and an assigned IP address.
if_up_strictness address

## Add spaces to keep things from moving about?  This only affects certain objects.
## use_spacer should have an argument of left, right, or none
use_spacer none

## Force UTF8? note that UTF8 support required XFT
override_utf8_locale no

## number of cpu samples to average
## set to 1 to disable averaging
cpu_avg_samples 2

pad_percents 2

template0 ${color0}\1 ${exec ~/.i3/conky/info.py \2}

default_color white
default_shade_color black
default_outline_color white

## Stuff after 'TEXT' will be formatted on screen
TEXT

# JSON for i3bar
[
{
    "full_text": "${exec xprop -id $(xdotool getactivewindow) | grep _NET_WM_NAME | cut -d '"' -f2- | sed 's/"$//' | cut -c-20}",
    "color": "\#000000",
    "background": "\#FFFFFF",
    "min_width": "here's a veeeeeeeeeeeeeeeeeeeery long title",
    "align": "center"
},
${if_match "${exec xset q | grep 'Caps Lock' | sed 's/.*Caps Lock:[ ]*\([^ ]*\).*/\1/'}"=="on"}
{
    "full_text": "CapsLock",
    "color": "\#00FF00"
},
${endif}
# {
#     "full_text": "${exec whoami}@${nodename} "
# },
# ${if_up tun0}
# {
#     "full_text": "Ôá§ ${addr tun0}",
#     "color": "\#00FF00"
# },
# ${endif}
#{
#    "full_text": " ÔÇ¨ ${exec curl icanhazip.com} ",
#    "border": "\#cccccc",
#    "background": "\#000000",
#    "border_bottom": 2, "border_top": 0, "border_left": 0, "border_right": 2,
#    "separator": false,
#    "separator_block_width": 3
#},
#${if_up eno1}
#{
#    "full_text": "üñß ${addr eth0} ",
#    "border": "\#cccccc",
#    "background": "\#000000",
#    "border_bottom": 2, "border_top": 0, "border_left": 0, "border_right": 2,
#    "separator": false,
#    "separator_block_width": 3
#},
#${endif}
${if_up eth0}
{
    "full_text": "üñß ${addr eth0} ",
    "border": "\#cccccc",
    "background": "\#000000",
    "border_bottom": 2, "border_top": 0, "border_left": 0, "border_right": 2,
    "separator": false,
    "separator_block_width": 3
},
${endif}
${if_up wlan0}
{
    "full_text": " Ôá´ ${addr wlan0} ",
    "border": "\#cccccc",
    "background": "\#000000",
    "border_bottom": 2, "border_top": 0, "border_left": 0, "border_right": 2,
    "separator": false,
    "separator_block_width": 3
},
${endif}
 {
     "full_text": " D: ${downspeed eno1}/s U: ${upspeed eno1}/s T: ${totaldown eno1}"
 },
{
    "full_text": " ÔáÄ / ${fs_free} (${fs_free_perc /}%) ",
    "separator": false

    ${if_match ${fs_free_perc /}<10}
        "color": "\#ff0000"  # red
    ${endif}
},
{
    "full_text": " ÔáÄ  /home ${fs_free /home} (${fs_free_perc /home}%) ",
    "separator": false
    ${if_match ${fs_free_perc /home}<10}
        "color": "\#ff0000"  # red
    ${endif}
},
{
 "full_text": " CPU: ${cpu cpu0}% ",
 "color": ${if_match ${cpu cpu0}>90}"\#FF0000"${else}${if_match ${cpu cpu0}<10}"\#00CC00"${else}"\#ffffff"${endif}#${endif}
},
{
    "full_text": " ÔÄ∫  ${memperc}% ",
    #"separator": true,
    ${if_match ${memperc}>=80}
        "color": "\#ff0000"  # red
    ${else}
    ${if_match ${memperc}<80}
        ${if_match ${memperc}>=70}
            # orange
            "color": "\#ff9933"
        ${endif}
    ${else}
    ${if_match ${memperc}<70}
        ${if_match ${memperc}>=60}
            "color": "\#ffff99"
        ${endif}
    ${else}
    ${if_match ${memperc}<60}
        "color": "\#cccccc"
    ${endif}
},
{
   "full_text": " ÔÅ≠ ${exec acpi -t | grep 'Thermal 1' | awk '{print $4}'} ",
   "separator": true
   #"separator_block_width": 3
},
{
    "full_text": " ÔÇ™ ${uptime_short} ",
    "min_width": "59m59s",
    "separator": true
},
{
    "full_text": " ‚ô™ ${exec ~/.config/i3/conky/volumelevel.sh}% ",
    "color": ${if_empty ${exec ~/.i3/conky/volumelevel.sh | grep 'Mute'}}"\#cccccc"${else}"\#ffff00"${endif},
    "separator": false
},
# { "full_text": "${template0 ÔÜÖ --get-brightness}"},
# {
#     "full_text": " ${template0 ÔÜ´ --get-keyboard-layout} ",
#     "border": "\#cccccc",
#     "background": "\#000000",
#     "border_bottom": 2, "border_top": 0, "border_left": 0, "border_right": 2,
#     "separator": false,
#     "separator_block_width": 3
# },
# ${if_match ${exec /usr/lib/update-notifier/update-motd-updates-available | grep 'security' | awk '{print $1}'}>0}
# {
#     "full_text": "‚ö† ${exec /usr/lib/update-notifier/update-motd-updates-available | grep 'security' | awk '{print $1}'} security updates",
#     "color": "\#ff0000",  # red
#     "border": "\#ff0000",  # red
#     "background": "\#000000",
#     "separator_block_width": 3,
#     "border_bottom": 2, "border_top": 0, "border_left": 0, "border_right": 2
# },
{ "full_text": "${execi 300 ~/.config/i3/conky/weather.sh} " },
{
    "full_text": "ÔÅ≥ ${time %a %d/%m/%y} - ${time %H:%M}"
}
],
